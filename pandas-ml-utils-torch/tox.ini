# tox (https://tox.readthedocs.io/) is a tool for running tests
# in multiple virtualenvs. This configuration file will run the
# test suite on all supported python versions. To use it, "pip install tox"
# and then run "tox" from this directory.
#
#
# Access package artifacts between multiple tox-runs
#
# If you have multiple projects using tox you can make use of a distshare directory where tox will copy in sdist-packages
# so that another tox run can find the “latest” dependency. This feature allows you to test a package against an
# unreleased development version or even an uncommitted version on your own machine.
#
# By default, {homedir}/.tox/distshare will be used for copying in and copying out artifacts (i.e. Python packages).
# For project two to depend on the one package you use the following entry:
#
# # example two/tox.ini
# [testenv]
# # install latest package from "one" project
# deps = {distshare}/one-*.zip


[tox]
envlist = py37
toxworkdir = {toxinidir}/../.tox/pandas_ml_utils_torch

[testenv]
deps =
    -rdev-requirements.txt
commands =
    python -m unittest discover
commands_pre =
    python -m pip install {distshare}/pandas-ml-common-0.2.0.zip
    python -m pip install {distshare}/pandas-ml-utils-0.2.0.zip
commands_post =
    python tox_clean_egg.py